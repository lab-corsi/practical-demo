name: Migrate Django

on:
  push:
  pull_request:

env:
  DJANGO_SETTINGS_MODULE: 'icsc_db2_api.config.settings'
  SOCIAL_AUTH_CLIENT_ID: '3d770df0-7657-4325-97e4-0dd72d9137a3'
  SOCIAL_AUTH_AZUREAD_TENANT_OAUTH2_KEY: '3d770df0-7657-4325-97e4-0dd72d9137a3'
  SOCIAL_AUTH_AZUREAD_TENANT_ID: 'organizations'
  ICSC_DB2_API_DATABASE_URL: 'db2://db2inst1:password@db2:50000/DEVDB?PCONNECT=True^&ATOMIC_REQUESTS=True^&currentschema=db2inst1'
  ICSC_DB2_API_DATABASE_TEST_SCHEMA: 'test'
  ICSC_DB2_API_POSTGRES_DATABASE_URL: 'psql://postgres:@db:5432/db2api'
  ICSC_DB2_API_POSTGRES_DATABASE_TEST_NAME: 'test'
  ICSC_DB2_API_ALLOWED_HOSTS: '127.0.0.1,localhost'
  ICSC_DB2_API_DEBUG: 1
  ICSC_DB2_API_MODELS_ARE_MANAGED: 1
  PYTHONPATH: "./src"
  POSTGRES_DB: "test"
  POSTGRES_PASSWORD: ""
  POSTGRES_USER: "postgres"
  POSTGRES_HOST_AUTH_METHOD: trust
  LICENSE: accept
  DBNAME: "devdb"
  DB2INST1_PASSWORD: "password"

jobs:
  test:
    strategy:
      matrix:
        version: [3.11, 3.12, 3.13]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    name: pytest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.version }}

      - uses: yezz123/setup-uv@v4

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Test with pytest
        working-directory: scripts/day3/cicd_python
        run: |
          uv run pytest -vvv -s --disable-warnings --cov-report=html --cov-report=xml --cov-config=.coveragerc --cov=custom_math tests

        env:
          SOCIAL_AUTH_AZUREAD_TENANT_OAUTH2_SECRET: ${{ secrets.SOCIAL_AUTH_AZUREAD_TENANT_OAUTH2_SECRET }}
          ICSC_DB2_API_SECRET_KEY: ${{ secrets.ICSC_DB2_API_SECRET_KEY }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.version }}-${{ matrix.os }}
          path: scripts/day3/cicd_python/html_coverage/

      - name: Code Coverage Summary Report
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: scripts/day3/cicd_python/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '30 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: scripts/day3/cicd_python/code-coverage-results.md